[{"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\index.js":"1","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\reportWebVitals.js":"2","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\App.js":"3","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\components\\TotalDisplay.js":"4","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\components\\CalcButton.js":"5","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\actions\\index.js":"6","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\reducers\\index.js":"7"},{"size":517,"mtime":1613422932595,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1613422932596,"results":"10","hashOfConfig":"9"},{"size":2825,"mtime":1613431417065,"results":"11","hashOfConfig":"9"},{"size":440,"mtime":1613422932593,"results":"12","hashOfConfig":"9"},{"size":296,"mtime":1613422932593,"results":"13","hashOfConfig":"9"},{"size":502,"mtime":1613430961364,"results":"14","hashOfConfig":"9"},{"size":1179,"mtime":1613430621749,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1bdiwqa",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\index.js",[],["34","35"],"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\reportWebVitals.js",[],"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\App.js",["36","37","38","39"],"import React, { useReducer } from 'react';\r\nimport reducer, {initialState} from \"./reducers/index\";\r\nimport './App.css';\r\n\r\nimport TotalDisplay from './components/TotalDisplay';\r\nimport CalcButton from './components/CalcButton';\r\nimport {applyNumber, changeOperation, addOne, clearDisplay} from './actions/index'\r\n\r\nfunction App() {\r\n\r\n  const [ state, dispatch ] = useReducer(reducer, initialState)\r\n\r\n  const handleApply = (value) => {\r\n    dispatch(applyNumber(value));\r\n  }\r\n\r\n  const handleOperation = (value) => {\r\n    dispatch(changeOperation(value));\r\n  }\r\n\r\n\r\n\r\n  const handleClear = () => {\r\n    dispatch(clearDisplay());\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\"/> Lambda Reducer Challenge</a>\r\n      </nav>\r\n\r\n      <div className = \"container row mt-5\">\r\n        <div className=\"col-md-12 d-flex justify-content-center\">\r\n          <form name=\"Cal\">\r\n            \r\n            <TotalDisplay value={state.total}/>\r\n            <div className=\"row details\">\r\n              <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\r\n              <span id=\"memory\"><b>Memory:</b>{state.memory}</span>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n              <CalcButton value={\"M+\"}/>\r\n              <CalcButton value={\"MR\"}/>\r\n              <CalcButton value={\"MC\"}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={1} onClick={() => (handleApply(1))}/>\r\n              <CalcButton value={2} onClick={() => (handleApply(2))}/>\r\n              <CalcButton value={3} onClick={() => (handleApply(3))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={4} onClick={() => (handleApply(4))}/>\r\n              <CalcButton value={5} onClick={() => (handleApply(5))}/>\r\n              <CalcButton value={6} onClick={() => (handleApply(6))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={7} onClick={() => (handleApply(7))}/>\r\n              <CalcButton value={8} onClick={() => (handleApply(8))}/>\r\n              <CalcButton value={9} onClick={() => (handleApply(9))}/>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <CalcButton value={\"+\"} onClick={() => (handleOperation(\"+\"))}/>\r\n              <CalcButton value={\"*\"} onClick={() => (handleOperation(\"*\"))}/>\r\n              <CalcButton value={\"-\"} onClick={() => (handleOperation(\"-\"))}/>\r\n            </div>\r\n\r\n            <div className=\"row ce_button\">\r\n              <CalcButton value={\"CE\"} onClick={clearDisplay}/>\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\components\\TotalDisplay.js",[],"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\components\\CalcButton.js",[],["40","41"],"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\actions\\index.js",[],"C:\\Users\\Tony Yang\\Desktop\\Git\\web-module-project-reducer\\src\\reducers\\index.js",["42"],"import { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY } from './../actions';\r\n\r\nexport const initialState = {\r\n    total: 0,\r\n    operation: \"*\",\r\n    memory: 0\r\n}\r\n\r\nconst calculateResult = (num1, num2, operation) => {\r\n    switch(operation) {\r\n        case(\"+\"):\r\n            return num1 + num2;\r\n        case(\"*\"):\r\n            return num1 * num2;\r\n        case(\"-\"):\r\n            return num1 - num2;\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case(ADD_ONE):\r\n            return({\r\n                ...state,\r\n                total: state.total + 1\r\n            });\r\n\r\n        case(APPLY_NUMBER):\r\n            return ({ \r\n                ...state, \r\n                total: calculateResult(state.total, action.payload, state.operation)\r\n            });\r\n        \r\n        case(CHANGE_OPERATION):\r\n            return ({\r\n                ...state,\r\n                operation: action.payload\r\n            });\r\n\r\n        case(CLEAR_DISPLAY):\r\n            return ({\r\n                ...state,\r\n                total:0,\r\n            })\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":39,"nodeType":"49","messageId":"50","endLine":7,"endColumn":45},{"ruleId":"47","severity":1,"message":"51","line":23,"column":9,"nodeType":"49","messageId":"50","endLine":23,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":31,"column":9,"nodeType":"54","endLine":31,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":31,"column":46,"nodeType":"54","endLine":31,"endColumn":93},{"ruleId":"43","replacedBy":"57"},{"ruleId":"45","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":10,"column":5,"nodeType":"61","messageId":"62","endLine":17,"endColumn":6},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'addOne' is defined but never used.","Identifier","unusedVar","'handleClear' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["63"],["64"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]